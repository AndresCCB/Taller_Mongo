// MongoDB
/*
Autor: @BrayanTorres2
Empresa: Universidad Ean
*/
const database = 'Compañia';
const collection = 'empleados';



// Create a new collection.
//db.createCollection(collection);
//----------------------------------------
//Para consultar todas las bases de datos
//show databases
//------------------------------------------
// Seleccione la base de datos que desea utilizar.
// Create a new database.
use(database);
//-------------------------------------------Eliminar tabla--------------
// El comando drop() destruye todos los datos de una colección.
//Asegúrese de ejecutarlo en la base de datos y la colección correctas.
db.empleados.drop();
//------------------------------------------------Insertar varios-----------
// Inserte algunos documentos en la colección de empleados.
// el insertMany nos sirve cuando queremos agregar variaos documentos

db.empleados.insertMany([
  { '_id': 1, "nombre": 'Juan',   'apellido': 'Torres', 'Cargo': 'Ingeniero en jefe', 'Nomina': 10000000, 'fechadecontratación': new Date('2014-03-01T08:00:00Z'),'estado':true, "empresa": {"_id": ObjectId(11)} },
  { '_id': 2, 'nombre': 'Brayan', 'apellido': 'Torres', 'Cargo': 'Profesor', 'Nomina': 9000000, 'fecha de contratación': new Date('2014-10-01T08:00:00Z'),'estado':true, "empresa": {"_id": ObjectId(11)} },
  { '_id': 3, 'nombre': 'Stiven', 'apellido': 'Torres', 'Cargo': 'Lider de recursos humanos', 'Nomina': 2000000, 'fechadecontratación': new Date('2014-03-15T09:00:00Z'),'estado':true, "empresa": {"_id": ObjectId(11)}  },
  { '_id': 4, 'nombre': 'Jesica', 'apellido': 'Perez',  'Cargo': 'Administrador', 'Nomina':3000000  , 'fechadecontratación': new Date('2014-04-04T11:21:39.736Z'),'estado':true, "empresa": {"_id": ObjectId(11)}  },
  { '_id': 5, 'nombre': 'Viviana','apellido': 'Perez',  'Cargo': 'Software engineer', 'Nomina': 20000000, 'fechadecontratación ': new Date('2014-04-04T21:23:13.331Z'),'estado':true, "empresa": {"_id": ObjectId(14)}  },
  { '_id': 6, 'nombre': 'Ana',    'apellido': 'Perez',  'Cargo': 'Ingeniero Químico', 'Nomina': 1500000, 'fechadecontratación ': new Date('2018-06-04T05:08:13Z'),'estado':true, "empresa": {"_id": ObjectId(11)}  },
  { '_id': 7, 'nombre': 'Maria',  'apellido': 'Sanchez','Cargo': 'Ingeniero Industrial', 'Nomina': 1400000, 'fechadecontratación ': new Date('2019-09-10T08:43:00Z'),'estado':true, "empresa": {"_id": ObjectId(13)}  },
  { '_id': 8, 'nombre': 'William','apellido': 'Sanchez','Cargo': 'Gerente General', 'Nomina': 50000, 'fechadecontratación ': new Date('2022-02-06T20:20:13Z'),'estado':true, "empresa": {"_id": ObjectId(11)}  },
]);

//-------------------------------------------------------------Insertar uno------
//Inserte solo un documento en la colección de empleados
var fecha1= new Date(1999,08,04)//otra manera de insertar una fecha es creando una instancia afuera
db.empleados.insertOne({'_id': 9, 'nombre': 'Pedro',   'apellido': 'Torres', 'Cargo': 'Ingeniero en jefe', 'Nomina': 10000000, 'fechadecontratación':fecha1, 'estado':true,"empresa": ObjectId("625909d32d0f29db8087dae1")})
//------------------------------------------------------------
//Otra forma de insertar con fecha y sin _id
db.empleados.insertOne({'nombre': 'Juanita',   'apellido': 'Torres', 'Cargo': 'Ingeniero en jefe', 'Nomina': 10000000, 'fechadecontratación':ISODate('2016-02-06T20:20:13Z'), 'estado':true, "empresa": ObjectId("625909d32d0f29db8087dae1")})
//---------Inner Join-----
//traer todos los empleados que trabajen en la empresa _id 11
/*
db.empresa.aggregate([
    {
        $match: {
            _id: ObjectId("625909d32d0f29db8087dae1")
            }
    }
    ,{
        $lookup: {
            from: "empleados",
            localField: "_id",
            foreignField: "empresa",
            as: "empleados "
            }
    }
    ]);
*/
//db.empleados.find()

//-------------------------------------------- Consultas-----------------------
//Consultar todos los datos de la tabla
db.empleados.find({});
//---------------------------------------------
//Consultar el empleado con _id numero 9
db.empleados.find({_id:9})
//-----------------------------------------------
//Consultar todos los empleados que su apellido sea "Torres"
db.empleados.find({'apellido':'Torres'})
//-------------------------------------------
//Consultar los primeros tres registros insertados
db.empleados.find({}).limit(3)
//-------------------------------------------------------------Operadores Relacionales---------
/*
gt= greater than >
gte= greater than equal >=
lt= lower than <
lte= lower than equal <=
*/
//---------------------------------------------
//Consultar todos los empleados con fecha de contratación mayor a 1999
db.getCollection("empleados").find({"fechadecontratación": {$gt:new Date('1999-01-01')}})
//---------------------------------------------------------Actualizar o Modificar-----------------------------
//Modificar el apellido de Maria por "Zanabria"
db.empleados.updateOne({'_id':7},{$set:{'apellido':'Zanabria'}})
db.empleados.find({})
//---------------------------------------------------
//Modificar el estado en la compañia para todos los empleados que fueron contradados menor o igual 1999-10-1 a false
db.empleados.updateMany({'fechadecontratación':{$lte:new Date('1999-10-01')}},{$set:{'estado':false}})
db.empleados.find({})
//-----------------------------------------------------
//Modificar la estructura del documento de Brayan ahora solo tendra nombre,cargo y un nuevo atributo llamado empleado_destacado:true
db.empleados.replaceOne({'_id':2},{'nombre':'Brayan','Cargo':'Profesor','empleado_destacado':true})
db.empleados.find({"_id":2})
//-------------------------------------------------------------------Eliminar----------
//eliminar el documento con _id numero 2
db.empleados.deleteOne({'_id':2}) 
db.empleados.find({})
//-----------------------------------------
//eliminar todos los documentos que su estado sea false
db.empleados.deleteMany({'estado':false})
db.empleados.find({})


//TALLER

// 1. Insertar un documento en la colección de empleados
db.empleados.insertOne({'_id': 10, 'nombre': 'Andres',   
                        'apellido': 'Castro', 'Cargo': 'Data Science', 
                        'Nomina': 12000000, 
                        'fechadecontratación':ISODate('2022-05-06T15:15:13Z'), 
                        'estado':true, 
                        "empresa": ObjectId("625909d32d0f29db8087dae1")})

db.empleados.find({})

//2. Insertar dos documentos en la colección de empleados
db.empleados.insertMany([
    {'_id': 11, 'nombre': 'Juan',   
    'apellido': 'Bravo', 'Cargo': 'Analista de Datos', 
    'Nomina': 10101010, 
    'fechadecontratación':ISODate('2022-02-02T15:15:13Z'), 
    'estado':true, 
    "empresa": ObjectId("625909d32d0f29db8087dae1")},
    {'_id': 12, 'nombre': 'Jorge',   
    'apellido': 'Lopez', 'Cargo': 'Ingeniero en jefe', 
    'Nomina': 12300000, 
    'fechadecontratación':ISODate('2022-05-12T19:30:13Z'), 
    'estado':false, 
    "empresa": ObjectId("0000000b9d19a624e98fdbe8")}
])

/*
3. Crear una colección llamada empresa con los siguientes atributos del documento:
    a. nombre
    b. 'direccion' 
    c. telefono
    d. fecha de creación
*/

db.createCollection('empresa', {
  validator: {
    $jsonSchema: {
        bsonType: "object",
        required: ["nombre", "direccion", "telefono", "fecha de creación"],
        properties: {
          nombre: {
            bsonType: 'string',
            minLength: 1,
            maxLength: 50
          },
          direccion: {
            bsonType: 'string',
            minLength: 1,
            maxLength: 50
          },
          telefono: {
            bsonType: 'string',
            minLength: 1,
            maxLength: 50
          },
          fechadecreación: {
            bsonType: 'date',
          }
        }
    }
  }
});

// 4. insertar cuatro empresas en la colección empresa

db.empresa.insertMany([
  {'id_': 1, 'nombre': "Empresa 1",'direccion' : "Calle 1",'telefono' : "123456789",'fecha_de_creacion': new Date('2020-03-01T08:00:00Z')}, 
  {'id_': 2, 'nombre': "Empresa 2",'direccion' : "Calle 2",'telefono' : "987654321",'fecha_de_creacion': new Date('2022-03-01T08:00:00Z')},
  {'id_': 3, 'nombre': "Empresa 3",'direccion' : "Calle 3",'telefono' : "123456789",'fecha_de_creacion': new Date('2000-03-01T08:00:00Z')},
  {'id_': 4, 'nombre': "Empresa 4",'direccion' : "Calle 4",'telefono' : "987654321",'fecha_de_creacion': new Date('2001-03-01T08:00:00Z')},
]);

// 5. ahora a cada documento hacer agregar otro atributo llamado empresa_id que sea el _id de la empresa
db.empleados.updateMany({}, {$set: {empresa_id: {$toObjectId: "$empresa"}}})

// 6. Consultar todos los empleados que pertenecen a la empresa con _id 1

db.empleados.find({'empresa_id': 1});

// 7. Eliminar todos los empleados que pertenecen a la empresa con _id 2

db.empleados.deleteMany({'empresa_id': 2});

// 8. actualizar el nombre de una empresa por "Universidad Ean"

db.empresa.updateOne({'_id': 3}, {$set: {'nombre': 'Universidad Ean'}});

// 9. Consultar todos los empleados que su sueldo este entre $1000000 y $6000000

db.empleados.find({'Nomina': {$gte: 1000000, $lte: 6000000}});

// 10. sumar todos los sueldos de los empleados de la empresa "Universidad Ean"
//sumar todos los sueldos de los empleados de la empresa "Universidad Ean"
db.empleados.aggregate([
  {$match: {'empresa_id': 3}},
  {$group: {_id: null, total: {$sum: '$Nomina'}}}
]);

/* 11. Modificar todos los empleados para que tengan un atributo array con 
comidas favoritas ["pizza","hamburguesa"...]
*/

db.empleados.updateMany({}, {$set: {'comidas favoritas': ['pizza', 
                                                          'hamburguesa', 
                                                          'papas fritas',
                                                          'nuggets',
                                                          'papas a la francesa',
                                                          'sopa']}});

db.empleados.find({});

// 12. Contar los empleados que tengan apellido Torres

db.empleados.find({'apellido': 'Torres'}).count();

// 13. consulatar el empleado mas nuevo segun su fecha de contratacion
db.empleados.find({}).sort({'fechadecontratación': 1}).limit(1);

